git常用命令介绍

git init

创建一个数据库

git clone

复制一个数据到制定文件夹

git add 和git commit

把想提交的文件add上，然后commit这些文件到本地数据库。

git pull

从服务器下载数据库，并跟自己的数据库合并。

git fetch

从服务器下载数据库，并放到新分支，不跟自己的数据库合并。

git whatchanged

查看两个分支的变化

git branch

创建分支，查看分支，删除分支


git checkout

切换分支

git merge

合并分支，把目标分支合并到当前分支

git config

配置相关信息，例如email和name

git log

查看版本历史

git show

查看版本号对于版本的历史，如果参数是HEAD查看最新版本。

git tag

标定版本号

git reset

恢复到之前的版本

--mixed是git-reset的默认选项，它的作用是重置索引内容，将其定位到指定的项目版本，而不改变你的工作树中的所有内容，只是提示你有哪些文件还未更新。

--soft选项既不触动索引的位置，也不改变工作树中的任何内容。该选项会保留你在工作树中的所有更新并使之处于待提交状态。相当于在--mixed基础上加上git add。

--hard 把整个目录还原到一个版本，包括所有文件。

git push

向其他数据库推送自己的数据库

git status

显示当前的状态

git mv

重命名文件或者文件夹

git rm

删除文件或者文件夹

git help

查看帮助，还有几个无关紧要的命令，请自己查看帮助。

1. 先在github上创建一个项目：例如 vue-demo
2. 在本地vue-demo 项目中使用 git init 把其变成git可以管理的仓库
git init
• 1
3. 若要忽略本地的文件或文件夹不被提交到github ，则需要在项目根目录下创建 .gitignore 文件
touch .gitignore
• 1
• 2
4. 打开文件，编辑内容，例如：

node_modules/ 
update.txt 
则可以忽略目录下node_modules 文件夹及updata.txt 文件.
配置文件可以在github在线浏览 
5. 添加文件夹下所有文件到暂存区 git add .
git add .
• 1
6. 把文件提交到仓库 git-commit -m “”
git commit -m 'decriptions'
• 1
5. 关联远程仓库 （第一次使用需要添加github公钥）
git remote add origin git@github.com:***/vue2.1-sell.git
• 1
• 2
或者
git remote add origin https://github.com/***/vue2.1-sell.git
• 1
• 2
6. 获取远程库与本地同步（远程仓库不为空需要这一步）
git pull --rebase origin master
• 1
7. 把本地内容推送到远程库 使用 git-push
git push -u origin master
• 1
以上内容就可以将本地文件推送到github上，并且可以自己设定不需要上传哪些文件

